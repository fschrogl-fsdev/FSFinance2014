<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
  xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
					  http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

  <http>
	<!-- Protected URLs -->
	<intercept-url pattern="/**/restricted/admin/**" access="ROLE_ADMIN" />
	<intercept-url pattern="/**/restricted/**" access="ROLE_USER" />
		
	<!-- Configure Login Form -->
	<form-login login-page="/pages/login.xhtml"
				default-target-url="/pages/restricted/home.xhtml"
				login-processing-url="${security.loginProcessUrl}"
				authentication-failure-url="/pages/login.xhtml?loginError=1"
				always-use-default-target="false"
				username-parameter="username"
				password-parameter="password" />
					
	<!-- Configure Logout URL -->
	<logout logout-url="/security/logout" delete-cookies="JSESSIONID" />
  </http>
	
  <!-- Configure Spring Security's authentication infrastructure -->
  <authentication-manager alias="authenticationManager">
	<authentication-provider user-service-ref="userDetailServiceCustom">
	  <password-encoder ref="passwordEncoder" />
	</authentication-provider>
  </authentication-manager>

  <!-- Define password encoder bean to use -->
  <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    <beans:constructor-arg value="${security.pwdEncRounds}" />
  </beans:bean>

  <!-- Define the custom UserDetailsService Spring Security should use -->
  <beans:bean id="userDetailServiceCustom" class="at.schrogl.fsfinance.business.security.UserDetailsServiceCustom">
    <beans:property name="pwdEncoder" ref="passwordEncoder" />
    <beans:property name="userDao" ref="userDao" />
  </beans:bean>
  
  <!-- Enable Spring Security Logging Bean -->
  <!-- INFO: Automatically receives all AuthenticationEvent messages issued by Spring Security and
       logs them through Apache Commons Logging. All log messages are logged with severity 'WARN'.
       The reason for the last security exception can be retrieved using the SpringEL expression
       ${SPRING_SECURITY_LAST_EXCEPTION.message} -->
  <!-- <beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener" /> -->
  <beans:bean id="loggerListener" class="at.schrogl.fsfinance.business.security.AuthenticationLoggerListenerCustom" />
 
  <!-- Localization-support for messages issued by Spring Security -->
  <!-- INFO: If enabled Spring Security will use the localized message bundles found at the given classpath
       entry to generate logging messages (defaults to en_US) -->
  <!-- 
  <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <beans:property name="basename" value="classpath:org/springframework/security/messages" />
  </beans:bean>
   -->

</beans:beans>